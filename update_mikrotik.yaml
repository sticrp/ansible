# playbooks/update_mikrotik_pkg_update.yml
- name: Atualizar RouterOS pelo repositório interno
  hosts: mikrotik
  gather_facts: no
  connection: ssh
  vars:
    # opcional: canal de atualização (release ou long-term)
    update_channel: "stable"
    wait_after_reboot: 120

  tasks:
    - name: (Opcional) Ajustar canal de atualização
      ansible.builtin.command: >
        /system package update set channel={{ update_channel }}
      when: update_channel is defined

    - name: Mostrar informações do pacote de atualização
      ansible.builtin.command: /system package update print
      register: info_update

    - name: Exibir canal/versão disponível
      ansible.builtin.debug:
        var: info_update.stdout_lines

    - name: Fazer download dos pacotes
      ansible.builtin.command: /system package update download
      register: download_result

    - name: Mostrar resultado do download
      ansible.builtin.debug:
        var: download_result.stdout_lines

    - name: Instalar pacote e agendar reboot
      ansible.builtin.command: /system package update install
      register: install_result

    - name: Mostrar saída da instalação
      ansible.builtin.debug:
        var: install_result.stdout_lines

    - name: Aguardar Mikrotik reiniciar e SSH voltar
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: "{{ ansible_port }}"
        delay: 10
        timeout: "{{ wait_after_reboot }}"
        state: started

    - name: Confirmar versão após reboot
      ansible.builtin.command: /system resource print
      register: new_version

    - name: Exibir nova versão do RouterOS
      ansible.builtin.debug:
        var: new_version.stdout_lines
